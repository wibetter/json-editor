import { cloneDeep as e, isEqual as t } from 'lodash';
function r(t) {
  return e(t);
}
function i(e, r) {
  return t(e, r);
}
function a(e) {
  var t = !1;
  return null != e && (t = !0), t;
}
function o(e, t, i) {
  var a = t;
  if ((i && (a = r(t)), e))
    for (var o = e.split('-'), n = 0, p = o.length; n < p; n++) {
      var l = o[n];
      l && (a = a && a[l]);
    }
  return a;
}
function n(e, t, i) {
  var a = t;
  if ((i && (a = r(t)), e))
    for (var o = e.split('-'), n = 0, p = o.length; n < p; n++) {
      var l = o[n];
      if (
        '0' !== l ||
        ('array' !== a.format &&
          'radio' !== a.format &&
          'single-select' !== a.format &&
          'select' !== a.format) ||
        (!a.options && !a.items)
      ) {
        if (l) {
          var s = '0';
          if (a.propertyOrder) s = a.propertyOrder[l];
          else if (a.properties) {
            s = Object.keys(a.properties)[l];
          }
          a = a.properties[s];
        }
      } else a = a.options || a.items;
    }
  return a;
}
function p(e, t, i) {
  var a = t;
  if ((i && (a = r(t)), e && a))
    for (var o = e.split('-'), n = 0, p = o.length; n < p; n++) {
      var l = o[n];
      l && a.properties && (a = a.properties[l]);
    }
  return a;
}
function l(e, t) {
  for (var r = t, i = '', a = e.split('-'), o = 0, n = a.length; o < n; o++) {
    var p = a[o];
    if ('0' === p && r.items) (r = r.items), (i = i ? i + '-items' : 'items');
    else if ('0' === p && r.options)
      (r = r.options), (i = i ? i + '-options' : 'options');
    else if (p) {
      var l = '0';
      if (r.propertyOrder) l = r.propertyOrder[p];
      else if (r.properties) {
        l = Object.keys(r.properties)[p];
      }
      (r = r.properties[l]), (i = i ? i + '-' + l : l);
    }
  }
  return i;
}
function s(e, t) {
  for (var r = t, i = '', a = e.split('-'), o = 0, n = a.length; o < n; o++) {
    var p = a[o];
    if (p) {
      var l = -1;
      if (r.propertyOrder)
        (l = r.propertyOrder.indexOf(p)), (r = r.properties[p]);
      else if (r.properties) {
        (l = Object.keys(r.properties).indexOf(p)), (r = r.properties[p]);
      } else
        r.items
          ? ((l = 0), (r = r.items))
          : r.options && ((l = 0), (r = r.options));
      i = i ? i + '-' + l : l.toString();
    }
  }
  return i;
}
var d = {
    type: 'object',
    format: 'event',
    title: '事件',
    isRequired: !1,
    readOnly: !1,
    properties: {
      type: {
        type: 'string',
        default: 'emit',
        format: 'typeSelect',
        enum: ['on', 'emit'],
        enumextra: ['on', 'emit'],
        title: '事件类型',
        isRequired: !1,
        readOnly: !1,
      },
      trigger: {
        type: 'string',
        format: 'input',
        default: 'eventName',
        title: '触发事件',
        description: '用于输入触发事件的名称',
        placeholder: '请输入触发事件的名称',
        isRequired: !1,
        readOnly: !1,
      },
      eventData: {
        type: 'string',
        title: '事件数据',
        format: 'json',
        default: '{}',
        description: '传递给触发事件的数据对象',
        isRequired: !1,
        readOnly: !1,
      },
    },
    propertyOrder: ['type', 'trigger', 'eventData'],
  },
  u = {
    type: 'object',
    format: 'datasource',
    title: '数据源',
    readOnly: !1,
    properties: {
      type: {
        type: 'string',
        default: 'local',
        format: 'typeSelect',
        enum: ['local', 'remote'],
        enumextra: ['local', 'remote'],
        title: '数据源类型',
      },
      data: {
        type: 'string',
        title: '本地json数据',
        placeholder: '请输入静态json数据',
        format: 'json',
        default: '{}',
        description: '用于设置本地的静态json数据',
        isRequired: !0,
      },
      filter: {
        type: 'string',
        title: '过滤器',
        format: 'codearea',
        default: '() => {}',
        description: '用于定义过滤当前数据的函数',
        isRequired: !0,
      },
    },
    propertyOrder: ['type', 'data', 'filter'],
  },
  f = {
    type: 'local',
    config: { dataName: '', body: {}, filter: 'return data;' },
    data: '{}',
    localFilter: 'return data;',
  },
  c = {
    jsonschema: {
      type: 'object',
      title: 'jsonSchemaObject',
      properties: {
        func: {
          type: 'object',
          format: 'func',
          title: '功能设置',
          readOnly: !0,
          properties: {
            a: {
              type: 'string',
              title: '单文本框',
              format: 'input',
              default: '',
              description: '',
              placeholder: '',
              isRequired: !1,
              readOnly: !1,
            },
          },
          propertyOrder: ['a'],
        },
        style: {
          type: 'object',
          format: 'style',
          title: '样式设置',
          readOnly: !0,
          properties: {
            b: {
              type: 'string',
              title: '单文本框',
              format: 'input',
              default: '',
              description: '',
              placeholder: '',
              isRequired: !1,
              readOnly: !1,
            },
          },
          propertyOrder: ['b'],
        },
        data: {
          type: 'object',
          format: 'data',
          title: '数据设置',
          readOnly: !0,
          properties: {
            c: {
              type: 'string',
              title: '单文本框',
              format: 'input',
              default: '',
              description: '',
              placeholder: '',
              isRequired: !1,
              readOnly: !1,
            },
          },
          propertyOrder: ['c'],
        },
      },
      propertyOrder: ['func', 'style', 'data'],
    },
    input: {
      type: 'string',
      title: '单文本框',
      format: 'input',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    boolean: {
      type: 'boolean',
      title: '布尔值',
      format: 'boolean',
      default: !1,
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    object: {
      type: 'object',
      format: 'object',
      title: '对象Object',
      description: '',
      isRequired: !1,
      readOnly: !1,
      properties: {
        a: {
          type: 'string',
          title: '单文本框',
          format: 'input',
          default: '',
          description: '',
          placeholder: '',
          isRequired: !1,
          readOnly: !1,
        },
      },
      propertyOrder: ['a'],
    },
    array: {
      type: 'array',
      format: 'array',
      title: '数组Array',
      description: '',
      isRequired: !1,
      readOnly: !1,
      items: {
        type: 'object',
        format: 'object',
        title: '数组项',
        description: '',
        isRequired: !1,
        readOnly: !1,
        properties: {
          name: {
            type: 'string',
            format: 'input',
            title: '名字',
            default: '',
            description: '',
            placeholder: '',
            isRequired: !1,
            readOnly: !1,
          },
        },
        propertyOrder: ['name'],
      },
    },
    'empty-array': {
      type: 'array',
      format: 'array',
      title: '数组Array',
      description: '',
      items: {
        type: 'object',
        format: 'object',
        title: '数组项',
        description: '',
        properties: {},
      },
    },
    'empty-object': {
      type: 'object',
      format: 'object',
      title: '对象Object',
      description: '',
      properties: {},
    },
    url: {
      type: 'string',
      title: '链接地址url',
      format: 'url',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    textarea: {
      type: 'string',
      title: '多行文本框',
      format: 'textarea',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    color: {
      type: 'string',
      title: '颜色color',
      format: 'color',
      default: '#ffffff',
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    image: {
      type: 'string',
      title: '图片',
      format: 'image',
      default: '',
      description: '上传图片',
      imgWidth: 200,
      imgHeight: 200,
      imgRatioReadOnly: !0,
      templateId: '',
      isRequired: !1,
    },
    number: {
      type: 'number',
      title: '数量number',
      format: 'number',
      default: 1,
      minimum: 0,
      maximum: 1e3,
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    json: {
      type: 'string',
      title: 'json数据',
      format: 'json',
      default: '{}',
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    codearea: {
      type: 'string',
      title: '函数类型',
      format: 'codearea',
      placeholder: '请输入函数方法',
      default: 'function func() { console.log("hello, world!"); }',
      description: '用于定义函数方法',
      isRequired: !1,
      readOnly: !1,
    },
    htmlarea: {
      type: 'string',
      title: '富文本',
      format: 'htmlarea',
      placeholder: '请输入html代码片段',
      default: '<p>hello,world!</p>',
      description: '用于放置html代码片段',
      isRequired: !1,
      readOnly: !1,
    },
    'text-editor': {
      type: 'string',
      title: '富文本',
      format: 'text-editor',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    date: {
      type: 'string',
      title: '日期Date',
      format: 'date',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    'date-time': {
      type: 'string',
      title: '日期时间',
      format: 'date-time',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    time: {
      type: 'string',
      title: '时间Time',
      format: 'time',
      default: '',
      description: '',
      placeholder: '',
      isRequired: !1,
      readOnly: !1,
    },
    quantity: {
      type: 'object',
      format: 'quantity',
      title: '单位计量',
      isRequired: !1,
      readOnly: !1,
      properties: {
        unit: {
          type: 'number',
          title: '单位数值',
          format: 'number',
          default: 50,
          minimum: 0,
          maximum: 1e3,
          description: '',
          isRequired: !1,
          readOnly: !1,
        },
        quantity: {
          type: 'string',
          format: 'typeSelect',
          default: 'px',
          enum: ['px', 'rem', 'em', '%'],
          enumextra: ['px', 'rem', 'em', '%'],
          title: '单位类型',
          isRequired: !1,
          readOnly: !1,
        },
      },
      propertyOrder: ['unit', 'quantity'],
    },
    'box-style': {
      type: 'object',
      format: 'box-style',
      title: '盒子模型',
      isRequired: !1,
      readOnly: !1,
      properties: {
        unit: {
          type: 'string',
          title: '单位数值',
          format: 'string',
          default: '0',
          description: '',
          isRequired: !1,
          readOnly: !1,
        },
        quantity: {
          type: 'string',
          format: 'typeSelect',
          default: 'px',
          enum: ['px', 'rem', 'em', '%'],
          enumextra: ['px', 'rem', 'em', '%'],
          title: '单位类型',
          isRequired: !1,
          readOnly: !1,
        },
      },
      propertyOrder: ['unit', 'quantity'],
    },
    radio: {
      type: 'string',
      title: '单选',
      format: 'radio',
      options: [
        { label: '选项a', value: 'a' },
        { label: '选项b', value: 'b' },
        { label: '选项c', value: 'c' },
      ],
      default: 'a',
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    'single-select': {
      type: 'string',
      title: '下拉单选',
      format: 'single-select',
      options: [
        { label: '选项a', value: 'a' },
        { label: '选项b', value: 'b' },
        { label: '选项c', value: 'c' },
      ],
      default: 'a',
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    select: {
      type: 'array',
      title: '多选',
      format: 'select',
      options: [
        { label: '选项a', value: 'a' },
        { label: '选项b', value: 'b' },
        { label: '选项c', value: 'c' },
      ],
      default: ['a'],
      description: '',
      isRequired: !1,
      readOnly: !1,
    },
    'dynamic-data': {
      type: 'object',
      format: 'dynamic-data',
      title: '动态数据源',
      readOnly: !1,
      properties: {
        type: {
          type: 'string',
          default: 'local',
          format: 'typeSelect',
          enum: ['local', 'remote'],
          enumextra: ['本地数据', '接口数据'],
          title: '数据类型',
        },
        config: {
          type: 'object',
          title: '接口配置',
          format: 'object',
          description: '用于存放接口的配置数据(url、请求参数等)',
          isRequired: !0,
          properties: {
            dataName: {
              type: 'string',
              default: 'local',
              format: 'typeSelect',
              enum: ['local', 'remote'],
              enumextra: ['本地数据', '接口数据'],
              title: '数据类型',
            },
            body: {
              type: 'object',
              title: '请求参数配置',
              format: 'object',
              description: '用于配置当前接口的请求参数数值',
              isRequired: !0,
            },
            filter: {
              type: 'string',
              title: '过滤器函数体',
              format: 'codearea',
              default: 'return data;',
              description: '用于定义过滤接口数据',
              isRequired: !0,
            },
          },
          propertyOrder: ['dataName', 'body', 'filter'],
        },
        data: {
          type: 'string',
          title: '数据内容',
          format: 'json',
          default: '{}',
          description: '用于存放DynamicData的数据内容',
          isRequired: !0,
        },
        localFilter: {
          type: 'string',
          title: '过滤器',
          format: 'codearea',
          default: 'return data;',
          description: '用于定义过滤本地数据',
          isRequired: !0,
        },
      },
      propertyOrder: ['type', 'config', 'data', 'localFilter'],
    },
    datasource: u,
    event: d,
    widget: {
      type: 'string',
      title: '内嵌组件数据',
      format: 'widget',
      default: '{}',
      description: '用于存放内嵌组件的渲染相关数据',
      isRequired: !1,
      readOnly: !0,
    },
  },
  y = {
    on: {
      type: 'object',
      format: 'event',
      title: '事件',
      isRequired: !1,
      readOnly: !1,
      properties: {
        type: {
          type: 'string',
          default: 'on',
          format: 'typeSelect',
          enum: ['on', 'emit'],
          enumextra: ['on', 'emit'],
          title: '事件类型',
          isRequired: !1,
          readOnly: !1,
        },
        register: {
          type: 'string',
          format: 'input',
          default: 'eventName',
          title: '注册事件',
          description: '用于输入注册事件的名称',
          placeholder: '请输入注册事件的名称',
          isRequired: !1,
          readOnly: !1,
        },
        actionFunc: {
          type: 'string',
          title: '执行函数',
          format: 'codearea',
          default: '() => {}',
          description: '',
          isRequired: !1,
          readOnly: !1,
        },
      },
      propertyOrder: ['type', 'register', 'actionFunc'],
    },
    emit: d,
  },
  m = {
    local: u,
    remote: {
      type: 'object',
      format: 'datasource',
      title: '数据源',
      readOnly: !1,
      properties: {
        type: {
          type: 'string',
          default: 'remote',
          format: 'typeSelect',
          enum: ['local', 'remote'],
          enumextra: ['local', 'remote'],
          title: '数据源类型',
        },
        data: {
          type: 'string',
          title: '远程json数据',
          placeholder: '请输入远程json数据源地址',
          format: 'url',
          default: 'http://xxx',
          isRequired: !0,
          description: '用于设置获取元素数据的请求地址',
        },
        filter: {
          type: 'string',
          title: '过滤器',
          format: 'codearea',
          default: '() => {}',
          description: '用于定义过滤当前数据的函数',
          isRequired: !0,
        },
      },
      propertyOrder: ['type', 'data', 'filter'],
    },
  };
function g(e) {
  return /^http[s]?:\/\/.*/.test(e);
}
function v(e) {
  return 'String' === Object.prototype.toString.call(e).slice(8, -1);
}
function O(e) {
  return (
    'number' == typeof e ||
    '[object Number]' === Object.prototype.toString.call(e)
  );
}
function b(e) {
  return 'Boolean' === Object.prototype.toString.call(e).slice(8, -1);
}
function j(e) {
  return /^\d{4}-\d{2}-\d{2}$/.test(e);
}
function h(e) {
  return (
    /^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}$/.test(e) ||
    /^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}$/.test(e)
  );
}
function q(e) {
  return /^\d{2}:\d{2}:\d{2}$/.test(e) || /^\d{2}:\d{2}$/.test(e);
}
function x(e) {
  var t = !1;
  return (
    'Array' === Object.prototype.toString.call(e).slice(8, -1) && (t = !0), t
  );
}
function R(e) {
  if (!x(e)) return !1;
  for (var t = 0, r = e.length; t < r; t++) {
    if (!v(e[t])) return !1;
  }
  return !0;
}
function S(e) {
  var t = !1;
  return (
    'Object' === Object.prototype.toString.call(e).slice(8, -1) && (t = !0), t
  );
}
function N(e) {
  var t = !1;
  return c.quantity.properties.quantity.enum.indexOf(e) >= 0 && (t = !0), t;
}
function k(e) {
  return /^#[0-9a-f]{6}$/.test(e) || /^#[0-9a-f]{3}$/.test(e);
}
function F(e) {
  var t = !1;
  return (
    'Function' === Object.prototype.toString.call(e).slice(8, -1) && (t = !0), t
  );
}
function D(e) {
  var t = {};
  return (
    (t =
      e && S(e)
        ? (function (e) {
            var t;
            if (S(e)) {
              var i = Object.keys(e);
              e.data && e.filter && 2 === i.length
                ? (t = x(e.data) || S(e.data) ? r(m.local) : r(m.remote))
                : e.trigger && e.eventData && 2 === i.length
                  ? (t = r(y.emit))
                  : e.register && e.actionFunc && 2 === i.length
                    ? (t = r(y.on))
                    : e.quantity && N(e.quantity) && 2 === i.length
                      ? (t = r(c.quantity))
                      : ((t = r(c['empty-object'])),
                        Object.keys(e).map(function (r) {
                          var i = e[r];
                          t.properties[r] = D(i);
                        }));
            }
            return t;
          })(e)
        : e && x(e)
          ? (function (e) {
              var t;
              if (e && x(e))
                if (R(e)) {
                  (t = r(c.select)).items.enum = e;
                  var i = t.items.enumextra.length,
                    a = e.length;
                  if (a > i)
                    for (var o = i, n = a; o < n; o++)
                      t.items.enumextra.push('选项' + e(o));
                } else {
                  t = r(c['empty-array']);
                  var p = D(e[0]);
                  t.items.properties = p.properties;
                }
              return t;
            })(e)
          : (function (e) {
              var t = '';
              if (b(e)) t = r(c.boolean);
              else if (O(e)) t = r(c.number);
              else if (g(e)) t = r(c.url);
              else if (j(e)) t = r(c.date);
              else if (h(e)) t = r(c['date-time']);
              else if (q(e)) t = r(c.time);
              else if (k(e)) t = r(c.color);
              else
                try {
                  t = O(JSON.parse(e)) ? r(c.input) : r(c.json);
                } catch (i) {
                  t = e && e.length > 30 ? r(c.textarea) : r(c.input);
                }
              return t;
            })(e)),
    t
  );
}
function w(e) {
  var t = e && e.format;
  return t || (t = e && e.type ? e.type : 'input'), t;
}
function $(e) {
  var t = !0;
  if (!e) return t;
  var r = w(e);
  return (
    (('object' === r &&
      e.properties &&
      e.propertyOrder &&
      e.propertyOrder.length > 0) ||
      ('array' === r &&
        e.items &&
        e.items.properties &&
        e.items.propertyOrder &&
        e.items.propertyOrder.length > 0) ||
      (e.type && 'array' !== e.type && 'object' !== e.type) ||
      e.format) &&
      (t = !1),
    t
  );
}
function J(e) {
  var t = !0;
  if (
    e &&
    'object' === w(e) &&
    e.properties &&
    e.propertyOrder &&
    e.propertyOrder.length > 0
  ) {
    var r = e.properties.func || {},
      i = e.properties.style || {},
      a = e.properties.data || {};
    ((r.propertyOrder && r.propertyOrder.length > 0) ||
      (i.propertyOrder && i.propertyOrder.length > 0) ||
      (a.propertyOrder && a.propertyOrder.length > 0)) &&
      (t = !1);
  }
  return t;
}
function T(e) {
  var t = !1;
  e &&
    'object' === w(e) &&
    e.properties &&
    e.propertyOrder &&
    e.properties.func &&
    e.properties.style &&
    e.properties.data &&
    (t = !0);
  return t;
}
function A(e) {
  var t = !1,
    r = e.lastUpdateTime,
    i = new Date('2024-10-03T23:30:00.691Z').getTime();
  return r && new Date(r).getTime() >= i && (t = !0), t;
}
function U(e) {
  var t = !1;
  return (
    ('object' !== e &&
      'func' !== e &&
      'style' !== e &&
      'data' !== e &&
      'widgets' !== e &&
      'func-schema' !== e &&
      'style-schema' !== e &&
      'data-schema' !== e &&
      'event-schema' !== e &&
      'widgets-schema' !== e) ||
      (t = !0),
    t
  );
}
function E(e) {
  var t = !1;
  return (
    ('func' !== e &&
      'style' !== e &&
      'data' !== e &&
      'props' !== e &&
      'event-schema' !== e &&
      'widgets' !== e) ||
      (t = !0),
    t
  );
}
function I(e) {
  var t = !0;
  return (
    'object' === (e.type || w(e)) && e.propertyOrder && e.properties
      ? e.propertyOrder.map(function (r) {
          var i = e.properties[r];
          ('object' === (e.type || w(i)) && i.propertyOrder && i.properties) ||
            (t = !1);
        })
      : (t = !1),
    t
  );
}
function W(e, t) {
  var r = e.split('-'),
    i = t.split('-');
  return r.pop(), i.pop(), r.join('-') === i.join('-');
}
function B(e, t) {
  for (
    var r = e.split('-'),
      i = t.split('-'),
      a = 'before',
      o = 0,
      n = (r.length > i.length ? i : r).length;
    o < n;
    o += 1
  ) {
    Number(r[o]) > Number(i[o]) && (a = 'after');
  }
  return a;
}
function H(e) {
  var t = e.split('-');
  return t.pop(), t.join('-');
}
function L(e) {
  var t = e.split('-'),
    r = t.pop(),
    i = Number(r) + 1;
  return t.push('' + i), t.join('-');
}
function Z(e) {
  var t = e.split('-'),
    r = t.pop();
  return [t.join('-'), r];
}
function z(e) {
  var t = e.split('-'),
    r = t.pop();
  return t.push(Number(r) - 1), t.join('-');
}
function C(e) {
  var t = e.split('-'),
    r = t.pop();
  return t.push(Number(r) + 1), t.join('-');
}
function G(e, t) {
  var r = t || {};
  if (S(e) && 'object' === e.type && e.properties) {
    (e.propertyOrder ? e.propertyOrder : Object.keys(e.properties)).map(
      function (t) {
        var i = e.properties[t];
        r = K(i, r);
      },
    );
  }
  return r;
}
function K(e, t) {
  var r = !t,
    i = t || {};
  if (e && '{}' !== JSON.stringify(e)) {
    var a = w(e);
    'object' === a || 'func' === a || 'style' === a || 'data' === a
      ? (!r && i.object ? (i.object += 1) : r || (i.object = 1), (i = G(e, i)))
      : 'array' === a
        ? (!r && i.array ? (i.array += 1) : r || (i.array = 1),
          (i = G((e = e.items), i)))
        : !r && i[a]
          ? (i[a] += 1)
          : r || (i[a] = 1);
  }
  return i;
}
function M(e) {
  var t = r(e);
  if (
    (!t.title && t.description && (t.title = t.description),
    t.format || (t.format = w(t)),
    ('quantity' !== t.format &&
      'array' !== t.format &&
      'datasource' !== t.format &&
      'event' !== t.format &&
      'object' !== t.format &&
      'radio' !== t.format &&
      'select' !== t.format) ||
      !a(t.default) ||
      delete t.default,
    'radio' === t.format &&
      ((t.type = 'string'),
      t.enum &&
        t.enumextra &&
        ((t.items = {
          type: 'string',
          enum: r(t.enum),
          enumextra: r(t.enumextra),
        }),
        delete t.enum,
        delete t.enumextra)),
    'quantity' === t.format)
  ) {
    var i = t.properties,
      o = r(c.quantity);
    if (i.quantity && S(i.quantity) && i.quantity.default) {
      var n = i.quantity.default;
      o.properties.quantity.default = 'percent' === n ? '%' : n;
    }
    t = o;
  }
  if ('datasource' === t.format) {
    var p = t.properties,
      l = p.type && p.type.default,
      s = p.data && p.data.default,
      d = p.filter && p.filter.default;
    'local' === l
      ? ((t = r(m.local)).properties.data.default = s ? r(s) : '{}')
      : ((t = r(m.remote)).properties.data.default = s ? r(s) : 'http://xxx'),
      (t.properties.filter.default = d ? r(d) : '() => {}');
  }
  if ('event' === t.format) {
    var u = t.properties,
      f = u.type && u.type.default;
    if ('in' === f || 'on' === f) {
      var g = (u.filter && u.filter.default) || '() => {}';
      (t = r(y.on)),
        u.actionFunc &&
          S(u.actionFunc) &&
          (t.properties.actionFunc.default = u.actionFunc.default || r(g));
    } else {
      var v = (u.filter && u.filter.default) || '{}';
      (t = r(y.emit)),
        u.eventData &&
          S(u.eventData) &&
          (t.properties.eventData.default = u.eventData.default || r(v));
    }
  }
  return (
    t.properties &&
      ((t.required = Object.keys(t.properties)),
      t.propertyOrder || (t.propertyOrder = t.required),
      t.propertyOrder.map(function (e) {
        t.properties[e] = P(t.properties[e]);
      })),
    t.items && (t.items = P(t.items)),
    t
  );
}
function P(e) {
  var t = r(e);
  return (
    t.format || (t.format = w(t)),
    t.required || delete t.required,
    ('quantity' !== t.format &&
      'array' !== t.format &&
      'datasource' !== t.format &&
      'event' !== t.format &&
      'object' !== t.format &&
      'radio' !== t.format &&
      'select' !== t.format) ||
      !a(t.default) ||
      delete t.default,
    ('radio' !== t.format &&
      'select' !== t.format &&
      'single-select' !== t.format) ||
      (t.items &&
        t.items.enum &&
        t.items.enumextra &&
        ((t.options = []),
        t.items.enum.forEach(function (e, r) {
          t.options.push({ label: t.items.enumextra[r] || e, value: e });
        }),
        delete t.items)),
    t.properties &&
      (t.propertyOrder || (t.propertyOrder = Object.keys(t.properties)),
      t.propertyOrder.map(function (e) {
        t.properties[e] = P(t.properties[e]);
      })),
    'array' === t.format && t.items && (t.items = P(t.items)),
    t
  );
}
function Q(e, t) {
  var r = '',
    i = t;
  a(i) && a(e.default) && typeof i != typeof e.default && (i = void 0);
  var o = a(i) ? i : e.default;
  switch (e.type) {
    case 'string':
      if ('typeSelect' === e.format) r = e.default;
      else if ('color' === e.format)
        ('#fff' !== o && '#FFF' !== o) || (o = '#ffffff'), (r = o || '#ffffff');
      else if ('json' === e.format || 'widget' === e.format) {
        var n = '';
        if (S(t) || x(t)) n = t;
        else if (F(t) || '' === t) n = {};
        else
          try {
            n = JSON.parse(t);
          } catch (e) {
            n = {};
          }
        r = n;
      } else r = a(o) ? o : '';
      break;
    case 'boolean':
      r = !!a(o) && o;
      break;
    case 'number':
      r = a(o) ? o : 1;
      break;
    default:
      r = a(o) ? o : '';
  }
  return r;
}
function V(e, t) {
  var i = {},
    o = w(e);
  if (S(e) && 'object' === e.type) {
    var n = e,
      p = t;
    a(p) && a(n.default) && typeof p != typeof n.default && (p = void 0);
    var l = a(p) ? p : n.default;
    if ('dynamic-data' === o)
      (i = r(f)),
        l && S(l) && '{}' !== JSON.stringify(l) && (i = Object.assign(i, l));
    else if ('datasource' === o)
      n.properties &&
      n.properties.type &&
      n.properties.type.default &&
      'local' === n.properties.type.default
        ? ((i = { data: '{}', filter: '() => {}' }),
          l && l.data && (i.data = l.data),
          l && l.filter && (i.filter = l.filter),
          'http://xxx' === i.data && (i.data = '{}'))
        : ((i = { data: 'http://xxx', filter: '() => {}' }),
          l && l.data && (i.data = l.data),
          l && l.filter && (i.filter = l.filter),
          '{}' === i.data && (i.data = 'http://xxx'));
    else if ('event' === o)
      n.properties &&
      n.properties.type &&
      n.properties.type.default &&
      'emit' === n.properties.type.default
        ? l && 'out' === l.type
          ? (i = { trigger: (l && l.filter) || 'eventName', eventData: '{}' })
          : ((i = { trigger: 'eventName', eventData: '{}' }),
            l && l.trigger && (i.trigger = l.trigger),
            l && l.eventData && (i.eventData = l.eventData))
        : l && 'in' === l.type
          ? (i = {
              register: 'eventName',
              actionFunc: (l && l.filter) || '() => {}',
            })
          : ((i = { register: 'eventName', actionFunc: '() => {}' }),
            l && l.register && (i.register = l.register),
            l && l.actionFunc && (i.actionFunc = l.actionFunc));
    else if (e.properties) {
      (e.propertyOrder ? e.propertyOrder : Object.keys(e.properties)).map(
        function (r) {
          var a = e.properties[r],
            o = t && t[r];
          switch (a.type) {
            case 'array':
              i[r] = X(a, o);
              break;
            case 'object':
              i[r] = V(a, o);
              break;
            default:
              i[r] = Q(a, o);
          }
        },
      );
    }
  }
  return i;
}
function X(e, t) {
  var r = [];
  if (e && 'array' === e.type) {
    var i = t;
    a(i) && a(e.default) && typeof i != typeof e.default && (i = void 0);
    var o = a(i) ? i : e.default;
    if ('array' === e.format)
      if (x(o))
        o.map(function (t) {
          r.push(V(e.items, t));
        });
      else {
        var n = V(e.items, o);
        r.push(n);
      }
    else r = a(o) ? o : [];
  }
  return r;
}
function Y(e, t) {
  return 'object' === e.type ? V(e, t) : 'array' === e.type ? X(e, t) : Q(e, t);
}
var _ = c;
function ee(e, t) {
  var r = t || [];
  if (e && '{}' !== JSON.stringify(e))
    if (S(e))
      if (
        e.type &&
        'remote' === e.type &&
        e.config &&
        S(e.config) &&
        e.config.dataName &&
        a(e.localFilter) &&
        a(e.data)
      ) {
        var i = e.config.body;
        if (i && !S(i))
          try {
            i = JSON.parse(i);
          } catch (e) {
            i = {};
          }
        r.push({ id: e.config.id, dataName: e.config.dataName, body: i });
      } else {
        Object.keys(e).map(function (t) {
          ee(e[t], r);
        });
      }
    else
      x(e) &&
        e.map(function (e) {
          ee(e, r);
        });
  return r;
}
function te(e, t) {
  var r = t || 'data';
  return (
    e.split('-').map(function (e) {
      r = /^\d+$/.test(e) ? r + '[' + e + ']' : r + '.' + e;
    }),
    r
  );
}
function re(e, t) {
  var r = [];
  S(e)
    ? Object.keys(e).map(function (i) {
        var a = e[i],
          o = t ? t + '-' + i : i;
        S(a) || x(a)
          ? r.push({ title: i, value: o, key: o, children: re(a, o) })
          : r.push({ title: i, value: o, key: o });
      })
    : x(e) &&
      e.map(function (e, i) {
        var a = i.toString(),
          o = t ? t + '-' + i : a;
        S(e) || x(e)
          ? r.push({ title: a, value: o, key: o, children: re(e, o) })
          : r.push({ title: a, value: o, key: o });
      });
  return r;
}
function ie(e) {
  var t = e.split('-');
  return t.pop(), t.join('-');
}
function ae(e) {
  var t = e.split('-'),
    r = t.pop();
  return [t.join('-'), r];
}
var oe = [
  'key',
  'enum',
  'enumextra',
  'items',
  'input',
  'boolean',
  'number',
  'color',
  'url',
  'textarea',
  'text-editor',
  'radio',
  'single-select',
  'select',
  'date',
  'date-time',
  'time',
  'json',
  'codearea',
  'htmlarea',
  'quantity',
  'box-style',
  'dynamic-data',
  'datasource',
  'event',
  'array',
  'object',
  'widget',
  'widgets',
  'widgetUUID',
  'embedWidgetList',
];
export {
  m as DataSourceTypeList,
  y as EventTypeDataList,
  oe as KeyWordList,
  c as TypeDataList,
  te as dataRoute2dataPath,
  ee as dynamicDataAnalyzer,
  B as getCurPosition,
  w as getCurrentFormat,
  o as getJsonDataByKeyRoute,
  L as getNextIndexRoute,
  H as getParentIndexRoute,
  Z as getParentIndexRoute_CurIndex,
  ie as getParentKeyRoute,
  ae as getParentKeyRoute_CurKey,
  n as getSchemaByIndexRoute,
  p as getSchemaByKeyRoute,
  a as hasProperties,
  l as indexRoute2keyRoute,
  x as isArray,
  b as isBoolean,
  U as isBoxSchemaData,
  k as isColor,
  j as isDateStr,
  h as isDateTimeStr,
  $ as isEmptySchema,
  J as isEmptyWidgetSchema,
  i as isEqual,
  E as isFirstSchemaData,
  F as isFunction,
  A as isNewSchemaData,
  O as isNumber,
  S as isObject,
  N as isQuantity,
  W as isSameParent,
  R as isSelect,
  v as isString,
  I as isStructuredSchema,
  q as isTimeStr,
  g as isURL,
  T as isUsedToWidgetConfig,
  D as json2schema,
  re as json2treeData,
  s as keyRoute2indexRoute,
  K as metaElemAnalyzer,
  C as moveBackward,
  z as moveForward,
  r as objClone,
  P as oldSchemaToNewSchema,
  M as oldSchemaToNewSchemaV1,
  Y as schema2json,
  _ as schemaMetaList,
};
